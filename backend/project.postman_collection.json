{
	"info": {
		"_postman_id": "086c3a1e-bb78-4763-a7e9-68b032be154a",
		"name": "KBTU Diploma project",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"postman.setEnvironmentVariable('access-token', jsonData.access)",
									"postman.setEnvironmentVariable('refresh-token', jsonData.refresh)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user19@gmail.com\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/auth/token/obtain",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"token",
								"obtain"
							]
						},
						"description": "Allows to get access and refresh tokens. As username must be passed user email. When tokens successfully obtained, access token must be defines in every outgoing request in Authorization header with value in format \"Bearer {access-token}\"\n\nI strongly recommend to save these tokens to somewhere in client side, like, localstorage for example"
					},
					"response": [
						{
							"name": "200 OK - Success response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin@gmail.com\",\n    \"password\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/auth/token/obtain/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"auth",
										"token",
										"obtain",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"refresh\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY3NDgxMzU2NiwiaWF0IjoxNjc0NzI3MTY2LCJqdGkiOiI3NWQ3NTlkMGIxMDA0NmIxYjJmYTUzZDM0Njc1ODBkZSIsInVzZXJfaWQiOjF9.llTXZCwzVghGIPOYB_Pna4i54SYzDryQRTvBNgZQoXk\",\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjc0NzI3NDY2LCJpYXQiOjE2NzQ3MjcxNjYsImp0aSI6IjgxMGE1MjA3NjUwNDQzNDU4MmI5OGQxNmQ3MDI4MTAwIiwidXNlcl9pZCI6MX0.q16lqUHWdjGqrTUZ8I-H1BrffYwFzk-pv16MYfrre5I\"\n}"
						},
						{
							"name": "400 - Fields required",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/auth/token/obtain/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"auth",
										"token",
										"obtain",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 26 Jan 2023 10:01:15 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.8.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "87"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": {\n        \"email\": [\n            \"This field is required.\"\n        ],\n        \"password\": [\n            \"This field is required.\"\n        ]\n    }\n}"
						},
						{
							"name": "401 - No such account",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"admin@gmail.com\",\n    \"password\": \"admin\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/auth/token/obtain/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"auth",
										"token",
										"obtain",
										""
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "{\n    \"detail\": \"No active account found with the given credentials\"\n}"
						}
					]
				},
				{
					"name": "Refresh token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody)",
									"postman.setEnvironmentVariable('access-token', jsonData.access)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refresh\": \"{{refresh-token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/auth/token/refresh",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"token",
								"refresh"
							]
						},
						"description": "Every access-token has limited life time. When token expires, server will response with error. In order to get new access token without entering credentials again, you have \"refresh\" token. Just send it to server and it will response with new one for you, so you can use it for requests"
					},
					"response": [
						{
							"name": "200 OK - Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"refresh\": \"{{refresh-token}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/auth/token/refresh/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"auth",
										"token",
										"refresh",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 26 Jan 2023 10:02:59 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.8.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "241"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"access\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNjc0NzI3Njc5LCJpYXQiOjE2NzQ3MjczNDQsImp0aSI6IjJlNzk3NWQwNjgzZjQ0NTRiYmIzMjNhNzFkN2IzYjg2IiwidXNlcl9pZCI6MX0.wRg2wMB8XzPIy880Xx5Y1VO6dAxmGSzVBqIeEfnNcww\"\n}"
						},
						{
							"name": "400 - Fields missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/auth/token/refresh/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"auth",
										"token",
										"refresh",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 26 Jan 2023 10:03:35 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.8.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "50"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": {\n        \"refresh\": [\n            \"This field is required.\"\n        ]\n    }\n}"
						}
					]
				},
				{
					"name": "Verify token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"token\": \"{{access-token}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/auth/token/verify",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"auth",
								"token",
								"verify"
							]
						},
						"description": "Anytime you want to check if current access-token is still working, just send it using this method. If everything is okay, then server will respond with 200 OK status, otherwise error 401 will be raised"
					},
					"response": [
						{
							"name": "200 - Success",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"token\": \"{{access-token}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/auth/token/verify/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"auth",
										"token",
										"verify",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 26 Jan 2023 10:04:52 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.8.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "2"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "400 - Fields missing",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/auth/token/verify/",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"auth",
										"token",
										"verify",
										""
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 26 Jan 2023 10:05:52 GMT"
								},
								{
									"key": "Server",
									"value": "WSGIServer/0.2 CPython/3.8.5"
								},
								{
									"key": "Content-Type",
									"value": "application/json"
								},
								{
									"key": "Vary",
									"value": "Accept, Origin"
								},
								{
									"key": "Allow",
									"value": "POST, OPTIONS"
								},
								{
									"key": "X-Frame-Options",
									"value": "DENY"
								},
								{
									"key": "Content-Length",
									"value": "48"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Referrer-Policy",
									"value": "same-origin"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								}
							],
							"cookie": [],
							"body": "{\n    \"detail\": {\n        \"token\": [\n            \"This field is required.\"\n        ]\n    }\n}"
						}
					]
				}
			],
			"description": "Is responsible for processing registration and login of user. On success login saves token to env variable"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get own profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/me",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "test3@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "Mark",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "James",
									"type": "text"
								},
								{
									"key": "role",
									"value": "student",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "male",
									"type": "text"
								},
								{
									"key": "date_of_birth",
									"value": "2001-10-03",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "",
									"type": "text"
								},
								{
									"key": "telegram_id",
									"value": "",
									"type": "text"
								},
								{
									"key": "rating",
									"value": "",
									"type": "text"
								},
								{
									"key": "avatar",
									"type": "file",
									"src": []
								},
								{
									"key": "is_active",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/schools/1/users",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "View school users list",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/schools/1/users",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1",
								"users"
							],
							"query": [
								{
									"key": "limit",
									"value": "10",
									"disabled": true
								},
								{
									"key": "offset",
									"value": "0",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "View one user",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/users/3",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update user",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "test2@gmail.com",
									"type": "text"
								},
								{
									"key": "first_name",
									"value": "Mark updated",
									"type": "text"
								},
								{
									"key": "last_name",
									"value": "James",
									"type": "text"
								},
								{
									"key": "role",
									"value": "student",
									"type": "text"
								},
								{
									"key": "gender",
									"value": "male",
									"type": "text"
								},
								{
									"key": "date_of_birth",
									"value": "2001-10-03",
									"type": "text"
								},
								{
									"key": "phone",
									"value": "77-77-77",
									"type": "text"
								},
								{
									"key": "telegram_id",
									"value": "77-77-77",
									"type": "text"
								},
								{
									"key": "avatar",
									"type": "file",
									"src": []
								},
								{
									"key": "is_active",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{BASE_URL}}/users/3",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Grades",
			"item": [
				{
					"name": "View school grades",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/schools/1/grades",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1",
								"grades"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create grade",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 2,\n    \"name\": \"1 класс\",\n    \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/grades",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"grades"
							]
						}
					},
					"response": []
				},
				{
					"name": "View one grade",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/grades/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"grades",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update grade",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"1 класс\",\n    \"is_active\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/grades/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"grades",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Schools",
			"item": [
				{
					"name": "Get one school",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/schools/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update school",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"First general school\",\n    \"address\": \"Main avenue 1\",\n    \"description\": \"Great school with great teachers\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/schools/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Groups",
			"item": [
				{
					"name": "Create group",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"grade\": 5,\n    \"teacher\": 4,\n    \"code\": \"TEST3\",\n    \"is_active\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/groups",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update group",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"grade\": 1,\n    \"teacher\": 46,\n    \"code\": \"TEST3\",\n    \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/groups/23",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one group",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/4",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get school groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/schools/1/groups?limit=&offset=",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1",
								"groups"
							],
							"query": [
								{
									"key": "limit",
									"value": ""
								},
								{
									"key": "offset",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get teacher groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/teachers/47/groups?limit&offset",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"teachers",
								"47",
								"groups"
							],
							"query": [
								{
									"key": "limit",
									"value": null
								},
								{
									"key": "offset",
									"value": null
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get grade groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/grades/1/groups?limit&offset",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"grades",
								"1",
								"groups"
							],
							"query": [
								{
									"key": "limit",
									"value": null
								},
								{
									"key": "offset",
									"value": null
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Students cards",
			"item": [
				{
					"name": "Get one student card",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/students/43",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"students",
								"43"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update student card",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"group\": 5\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/students/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"students",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get school students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/schools/1/students",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1",
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get group students",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/groups/8/students",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"groups",
								"8",
								"students"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subjects",
			"item": [
				{
					"name": "Get one subject",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/subjects/43",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"subjects",
								"43"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create subject",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"grade\": 5,\n    \"name\": 4,\n    \"description\": \"\",\n    \"code\": \"\",\n    \"is_active\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/subjects",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update subject",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"grade\": 9,\n    \"name\": \"Algebra\",\n    \"description\": \"\",\n    \"code\": \"LOLKEK\",\n    \"is_active\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/subjects/1",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"subjects",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get school subjects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/schools/1/students",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1",
								"students"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get grade subjects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/grades/9/subjects",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"grades",
								"9",
								"subjects"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Academic years",
			"item": [
				{
					"name": "Get one year",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/years/43",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"years",
								"43"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create year",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"name\": \"2023-2024\",\n    \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/years",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"years"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update year",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"name\": \"2023-2024\",\n    \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/years/7",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"years",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get school years",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/schools/1/years",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"schools",
								"1",
								"years"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Terms",
			"item": [
				{
					"name": "Get one term",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/terms/43",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"terms",
								"43"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create term",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"name\": \"2023-2024\",\n    \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/terms",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"terms"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update term",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"school\": 1,\n    \"name\": \"2023-2024\",\n    \"is_active\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/terms/7",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"terms",
								"7"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get terms of year",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BASE_URL}}/years/1/terms",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"years",
								"1",
								"terms"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{access-token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}