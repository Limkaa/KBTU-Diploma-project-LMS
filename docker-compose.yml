version: '3.9'

services:
    db:
        image: postgres
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        restart: always
        ports:
            - '5433:5432'
    django:
        build:
            context: ./backend
            dockerfile: Dockerfile
        command: bash -c "python src/manage.py migrate && python src/manage.py runserver 0.0.0.0:8000"
        environment:
            - POSTGRES_NAME=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        ports:
            - '8000:8000'
        volumes:
            - ./backend:/app/backend
        restart: always
        depends_on:
            - db

    redis:
        image: redis:alpine
        ports:
            - '0.0.0.0:6379:6379'
        command: redis-server
        restart: always

    celery:
        build:
            context: ./backend
            dockerfile: Dockerfile
        command: bash -c "cd src && celery -A project worker --loglevel=INFO"
        depends_on:
            - redis
            - django
        volumes:
            - ./backend:/app/backend
        restart: always

    tgbot:
        build:
            context: ./backend
            dockerfile: Dockerfile
        command: bash -c "cd src && python manage.py bot_polling"
        depends_on:
            - django
        volumes:
            - ./backend:/app/backend
        restart: always

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile

        ports:
            - '3000:3000'

        volumes:
            - ./frontend:/app/frontend

        depends_on:
            - 'django'
        restart: always
